syntax = "proto3";

package flowshot.navigator.api.fileservice.v1;
option go_package = "github.com/flowshot-io/navigator-api/v1;fileservice";

import "google/protobuf/timestamp.proto";

service FileService {
    rpc CreateFile(CreateFileRequest) returns (CreateFileResponse);
    rpc DeleteFile(DeleteFileRequest) returns (DeleteFileResponse);

    rpc WriteMultipart(WriteMultipartRequest) returns (WriteMultipartResponse);
    rpc CompleteMultipart(CompleteMultipartRequest) returns (CompleteMultipartResponse);

    rpc GetFile(GetFileRequest) returns (GetFileResponse);
    rpc ListFiles(ListFilesRequest) returns (ListFilesResponse);

    rpc WriteFile(WriteFileRequest) returns (WriteFileResponse);
    rpc ReadFile(ReadFileRequest) returns (stream ReadFileResponse);
}

// Status

enum Status {
    STATUS_UNDEFINED = 0;
    STATUS_CREATED = 1;
    STATUS_UPLOADING = 2;
    STATUS_VALIDATING = 3;
    STATUS_PROCESSING = 4;
    STATUS_INDEXING = 5;
    STATUS_READY = 6;
    STATUS_DELETING = 7;
    STATUS_COMPLETED = 8;
}


// FileType

message FileType {
    string mime = 1;
    string extension = 2;
}

// BoundingBox

message Point {
    double x = 1;
    double y = 2;
}

message BoundingBox {
    Point bottomLeft = 1;
    Point topRight = 2;
}

// File

message File {
    string fileID = 1;
    string assetID = 2;
    string key = 3;
    Status status = 4;

    string multipartID = 5;
    
    string mime = 6;
    string extension = 7;
    int64 size = 8;

    string description = 9;
    map<string, string> meta = 10;

    string sampledFrom = 11;
    int64 sampleIndex = 12;
    BoundingBox sampleBounds = 13;

    google.protobuf.Timestamp createdAt = 14;
    google.protobuf.Timestamp uploadedAt = 15;
    google.protobuf.Timestamp processedAt = 16;
    google.protobuf.Timestamp indexedAt = 17;
}

// CreateFile

message CreateFileRequest {
    string assetID = 1;
    string key = 2;
    string sampledFrom = 11;
    int64 sampleIndex = 12;
    BoundingBox sampleBounds = 13;
}

message CreateFileResponse {
    string fileID = 1;
}

// WriteMultipart

message WriteMultipartRequest {
    string fileID = 1;
    int64 partNumber = 2;
    bytes data = 3;
    string integrityCheckValue = 4;
}

message WriteMultipartResponse {}

// CompleteMultipart

message CompleteMultipartRequest {
    string fileID = 1;
    repeated int64 partNumbers = 2;
}

message CompleteMultipartResponse {}

// DeleteFile

message DeleteFileRequest {
    string fileID = 1;
}

message DeleteFileResponse {
}

// GetFile

message GetFileRequest {
    string fileID = 1;
}

message GetFileResponse {
    File file = 1;
}

// ListFiles

message ListFilesRequest {
}

message ListFilesResponse {
    repeated File files = 1;
}

// WriteFile

message WriteFileRequest {
    string fileID = 1;
    bytes data = 3;
    string integrityCheckValue = 4;
}

message WriteFileResponse {
}

// ReadFile

message ReadFileRequest {
    string fileID = 1;
    int64 startChunkNumber = 2;
}

message ReadFileResponse {
    int64 chunkNumber = 1;
    bytes data = 2;
    string integrityCheckValue = 3;
}